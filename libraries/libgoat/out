INTERNAL BORK ALERT
TypeResolutionError {
  message: 'Literal has no overlapping type candidates.\nThey are a few reasons this could happen: \n  1. The STL is not linked\n  2. You are using a literal which doesn\'t have a class associated with it.\nThis is likely an internal bug, but check for an existing\nreport before leaving your own. You can also try to define\nyour own candidate using `@primitive(...)`',
  name: 'Type Resolution Error',
  node: 
   Literal {
     position: { line: 0, column: 5, index: 8, length: 1 },
     parentScope: 
      CodeBlock {
        position: { line: 1, column: -1, index: 9, length: 1 },
        parentScope: [Circular],
        parentNode: 
         [ [Circular],
           parentScope: null,
           parentNode: CodeBlock {
             position: null,
             parentScope: null,
             parentNode: null,
             queueQualifier: null,
             statements: [Circular],
             scope: 
              Scope {
                ids: 
                 Map {
                   'Int' => [ ScopeTypeItem {
                     rootId: 'Int',
                     references: [],
                     type: null,
                     isInterface: false,
                     castsables: [],
                     superclass: 
                      ScopeTypeItem {
                        rootId: 'Object',
                        references: [],
                        type: null,
                        isInterface: false,
                        castsables: [],
                        superclass: undefined,
                        subscope: null },
                     subscope: 
                      Scope {
                        ids: Map {},
                        parentScope: 
                         Scope {
                           ids: Map { 'Int' => [ [Circular] ] },
                           parentScope: 
                            Scope {
                              ids: 
                               Map {
                                 'Int' => [ [Circular] ],
                                 'Int8' => [ ScopeTypeItem {
                                   rootId: 'Int8',
                                   references: [],
                                   type: null,
                                   isInterface: false,
                                   castsables: [],
                                   superclass: 
                                    ScopeTypeItem {
                                      rootId: 'Object',
                                      references: [],
                                      type: null,
                                      isInterface: false,
                                      castsables: [],
                                      superclass: undefined,
                                      subscope: null },
                                   subscope: 
                                    Scope {
                                      ids: Map {},
                                      parentScope: 
                                       Scope {
                                         ids: Map { 'Int8' => [ [Circular] ] },
                                         parentScope: [Circular] } } } ] },
                              parentScope: null } } } } ],
                   'Int8' => [ ScopeTypeItem {
                     rootId: 'Int8',
                     references: [],
                     type: null,
                     isInterface: false,
                     castsables: [],
                     superclass: 
                      ScopeTypeItem {
                        rootId: 'Object',
                        references: [],
                        type: null,
                        isInterface: false,
                        castsables: [],
                        superclass: undefined,
                        subscope: null },
                     subscope: 
                      Scope {
                        ids: Map {},
                        parentScope: 
                         Scope {
                           ids: Map { 'Int8' => [ [Circular] ] },
                           parentScope: 
                            Scope {
                              ids: Map {},
                              parentScope: 
                               Scope {
                                 ids: 
                                  Map {
                                    'Int' => [ ScopeTypeItem {
                                      rootId: 'Int',
                                      references: [],
                                      type: null,
                                      isInterface: false,
                                      castsables: [],
                                      superclass: 
                                       ScopeTypeItem {
                                         rootId: 'Object',
                                         references: [],
                                         type: null,
                                         isInterface: false,
                                         castsables: [],
                                         superclass: undefined,
                                         subscope: null },
                                      subscope: [Circular] } ] },
                                 parentScope: 
                                  Scope {
                                    ids: 
                                     Map {
                                       'Int' => [ ScopeTypeItem {
                                         rootId: 'Int',
                                         references: [],
                                         type: null,
                                         isInterface: false,
                                         castsables: [],
                                         superclass: 
                                          ScopeTypeItem {
                                            rootId: 'Object',
                                            references: [],
                                            type: null,
                                            isInterface: false,
                                            castsables: [],
                                            superclass: undefined,
                                            subscope: null },
                                         subscope: [Circular] } ],
                                       'Int8' => [ [Circular] ] },
                                    parentScope: null } } } } } } ] },
                parentScope: null },
             rootScope: false,
             lazyHooks: [] } ],
        queueQualifier: 0,
        statements: 
         [ AssignmentStatement {
             position: { line: 0, column: 5, index: 8, length: 1 },
             parentScope: [Circular],
             parentNode: [Circular],
             queueQualifier: 0,
             access: [],
             scopeRef: null,
             type: 1,
             identifier: 
              TypedIdentifier {
                position: { line: 0, column: 3, index: 4, length: 1 },
                parentScope: [Circular],
                parentNode: [Circular],
                queueQualifier: 0,
                identifier: 
                 Identifier {
                   position: { line: 0, column: 3, index: 4, length: 1 },
                   parentScope: [Circular],
                   parentNode: [Circular],
                   queueQualifier: 0,
                   identifier: ScopeItem { rootId: 'a', references: [], type: null },
                   original: 'a' },
                type: null },
             value: 
              ExpressionStatement {
                position: { line: 0, column: 5, index: 8, length: 1 },
                parentScope: [Circular],
                parentNode: [Circular],
                queueQualifier: 0,
                expression: [Circular] },
             ref: 
              ScopeAliasItem {
                rootId: 'a',
                references: [],
                type: null,
                candidates: [],
                escapesScope: false,
                source: [Circular] } },
           parentScope: [Circular],
           parentNode: [Circular] ],
        scope: 
         Scope {
           ids: 
            Map {
              'a' => [ ScopeAliasItem {
                rootId: 'a',
                references: [],
                type: null,
                candidates: [],
                escapesScope: false,
                source: 
                 AssignmentStatement {
                   position: { line: 0, column: 5, index: 8, length: 1 },
                   parentScope: [Circular],
                   parentNode: [ [Circular], parentScope: [Circular], parentNode: [Circular] ],
                   queueQualifier: 0,
                   access: [],
                   scopeRef: null,
                   type: 1,
                   identifier: 
                    TypedIdentifier {
                      position: { line: 0, column: 3, index: 4, length: 1 },
                      parentScope: [Circular],
                      parentNode: [Circular],
                      queueQualifier: 0,
                      identifier: 
                       Identifier {
                         position: { line: 0, column: 3, index: 4, length: 1 },
                         parentScope: [Circular],
                         parentNode: [Circular],
                         queueQualifier: 0,
                         identifier: ScopeItem { rootId: 'a', references: [], type: null },
                         original: 'a' },
                      type: null },
                   value: 
                    ExpressionStatement {
                      position: { line: 0, column: 5, index: 8, length: 1 },
                      parentScope: [Circular],
                      parentNode: [Circular],
                      queueQualifier: 0,
                      expression: [Circular] },
                   ref: [Circular] } } ] },
           parentScope: 
            Scope {
              ids: 
               Map {
                 'Int' => [ ScopeTypeItem {
                   rootId: 'Int',
                   references: [],
                   type: null,
                   isInterface: false,
                   castsables: [],
                   superclass: 
                    ScopeTypeItem {
                      rootId: 'Object',
                      references: [],
                      type: null,
                      isInterface: false,
                      castsables: [],
                      superclass: undefined,
                      subscope: null },
                   subscope: 
                    Scope {
                      ids: Map {},
                      parentScope: 
                       Scope {
                         ids: Map { 'Int' => [ [Circular] ] },
                         parentScope: 
                          Scope {
                            ids: 
                             Map {
                               'Int' => [ [Circular] ],
                               'Int8' => [ ScopeTypeItem {
                                 rootId: 'Int8',
                                 references: [],
                                 type: null,
                                 isInterface: false,
                                 castsables: [],
                                 superclass: 
                                  ScopeTypeItem {
                                    rootId: 'Object',
                                    references: [],
                                    type: null,
                                    isInterface: false,
                                    castsables: [],
                                    superclass: undefined,
                                    subscope: null },
                                 subscope: 
                                  Scope {
                                    ids: Map {},
                                    parentScope: 
                                     Scope {
                                       ids: Map { 'Int8' => [ [Circular] ] },
                                       parentScope: [Circular] } } } ] },
                            parentScope: null } } } } ],
                 'Int8' => [ ScopeTypeItem {
                   rootId: 'Int8',
                   references: [],
                   type: null,
                   isInterface: false,
                   castsables: [],
                   superclass: 
                    ScopeTypeItem {
                      rootId: 'Object',
                      references: [],
                      type: null,
                      isInterface: false,
                      castsables: [],
                      superclass: undefined,
                      subscope: null },
                   subscope: 
                    Scope {
                      ids: Map {},
                      parentScope: 
                       Scope {
                         ids: Map { 'Int8' => [ [Circular] ] },
                         parentScope: 
                          Scope {
                            ids: Map {},
                            parentScope: 
                             Scope {
                               ids: 
                                Map {
                                  'Int' => [ ScopeTypeItem {
                                    rootId: 'Int',
                                    references: [],
                                    type: null,
                                    isInterface: false,
                                    castsables: [],
                                    superclass: 
                                     ScopeTypeItem {
                                       rootId: 'Object',
                                       references: [],
                                       type: null,
                                       isInterface: false,
                                       castsables: [],
                                       superclass: undefined,
                                       subscope: null },
                                    subscope: [Circular] } ] },
                               parentScope: 
                                Scope {
                                  ids: 
                                   Map {
                                     'Int' => [ ScopeTypeItem {
                                       rootId: 'Int',
                                       references: [],
                                       type: null,
                                       isInterface: false,
                                       castsables: [],
                                       superclass: 
                                        ScopeTypeItem {
                                          rootId: 'Object',
                                          references: [],
                                          type: null,
                                          isInterface: false,
                                          castsables: [],
                                          superclass: undefined,
                                          subscope: null },
                                       subscope: [Circular] } ],
                                     'Int8' => [ [Circular] ] },
                                  parentScope: null } } } } } } ] },
              parentScope: null } },
        rootScope: true,
        lazyHooks: [] },
     parentNode: 
      ExpressionStatement {
        position: { line: 0, column: 5, index: 8, length: 1 },
        parentScope: 
         CodeBlock {
           position: { line: 1, column: -1, index: 9, length: 1 },
           parentScope: [Circular],
           parentNode: 
            [ [Circular],
              parentScope: null,
              parentNode: CodeBlock {
                position: null,
                parentScope: null,
                parentNode: null,
                queueQualifier: null,
                statements: [Circular],
                scope: 
                 Scope {
                   ids: 
                    Map {
                      'Int' => [ ScopeTypeItem {
                        rootId: 'Int',
                        references: [],
                        type: null,
                        isInterface: false,
                        castsables: [],
                        superclass: 
                         ScopeTypeItem {
                           rootId: 'Object',
                           references: [],
                           type: null,
                           isInterface: false,
                           castsables: [],
                           superclass: undefined,
                           subscope: null },
                        subscope: 
                         Scope {
                           ids: Map {},
                           parentScope: 
                            Scope {
                              ids: Map { 'Int' => [ [Circular] ] },
                              parentScope: 
                               Scope {
                                 ids: 
                                  Map {
                                    'Int' => [ [Circular] ],
                                    'Int8' => [ ScopeTypeItem {
                                      rootId: 'Int8',
                                      references: [],
                                      type: null,
                                      isInterface: false,
                                      castsables: [],
                                      superclass: 
                                       ScopeTypeItem {
                                         rootId: 'Object',
                                         references: [],
                                         type: null,
                                         isInterface: false,
                                         castsables: [],
                                         superclass: undefined,
                                         subscope: null },
                                      subscope: 
                                       Scope {
                                         ids: Map {},
                                         parentScope: 
                                          Scope {
                                            ids: Map { 'Int8' => [ [Circular] ] },
                                            parentScope: [Circular] } } } ] },
                                 parentScope: null } } } } ],
                      'Int8' => [ ScopeTypeItem {
                        rootId: 'Int8',
                        references: [],
                        type: null,
                        isInterface: false,
                        castsables: [],
                        superclass: 
                         ScopeTypeItem {
                           rootId: 'Object',
                           references: [],
                           type: null,
                           isInterface: false,
                           castsables: [],
                           superclass: undefined,
                           subscope: null },
                        subscope: 
                         Scope {
                           ids: Map {},
                           parentScope: 
                            Scope {
                              ids: Map { 'Int8' => [ [Circular] ] },
                              parentScope: 
                               Scope {
                                 ids: Map {},
                                 parentScope: 
                                  Scope {
                                    ids: 
                                     Map {
                                       'Int' => [ ScopeTypeItem {
                                         rootId: 'Int',
                                         references: [],
                                         type: null,
                                         isInterface: false,
                                         castsables: [],
                                         superclass: 
                                          ScopeTypeItem {
                                            rootId: 'Object',
                                            references: [],
                                            type: null,
                                            isInterface: false,
                                            castsables: [],
                                            superclass: undefined,
                                            subscope: null },
                                         subscope: [Circular] } ] },
                                    parentScope: 
                                     Scope {
                                       ids: 
                                        Map {
                                          'Int' => [ ScopeTypeItem {
                                            rootId: 'Int',
                                            references: [],
                                            type: null,
                                            isInterface: false,
                                            castsables: [],
                                            superclass: 
                                             ScopeTypeItem {
                                               rootId: 'Object',
                                               references: [],
                                               type: null,
                                               isInterface: false,
                                               castsables: [],
                                               superclass: undefined,
                                               subscope: null },
                                            subscope: [Circular] } ],
                                          'Int8' => [ [Circular] ] },
                                       parentScope: null } } } } } } ] },
                   parentScope: null },
                rootScope: false,
                lazyHooks: [] } ],
           queueQualifier: 0,
           statements: 
            [ AssignmentStatement {
                position: { line: 0, column: 5, index: 8, length: 1 },
                parentScope: [Circular],
                parentNode: [Circular],
                queueQualifier: 0,
                access: [],
                scopeRef: null,
                type: 1,
                identifier: 
                 TypedIdentifier {
                   position: { line: 0, column: 3, index: 4, length: 1 },
                   parentScope: [Circular],
                   parentNode: [Circular],
                   queueQualifier: 0,
                   identifier: 
                    Identifier {
                      position: { line: 0, column: 3, index: 4, length: 1 },
                      parentScope: [Circular],
                      parentNode: [Circular],
                      queueQualifier: 0,
                      identifier: ScopeItem { rootId: 'a', references: [], type: null },
                      original: 'a' },
                   type: null },
                value: [Circular],
                ref: 
                 ScopeAliasItem {
                   rootId: 'a',
                   references: [],
                   type: null,
                   candidates: [],
                   escapesScope: false,
                   source: [Circular] } },
              parentScope: [Circular],
              parentNode: [Circular] ],
           scope: 
            Scope {
              ids: 
               Map {
                 'a' => [ ScopeAliasItem {
                   rootId: 'a',
                   references: [],
                   type: null,
                   candidates: [],
                   escapesScope: false,
                   source: 
                    AssignmentStatement {
                      position: { line: 0, column: 5, index: 8, length: 1 },
                      parentScope: [Circular],
                      parentNode: [ [Circular], parentScope: [Circular], parentNode: [Circular] ],
                      queueQualifier: 0,
                      access: [],
                      scopeRef: null,
                      type: 1,
                      identifier: 
                       TypedIdentifier {
                         position: { line: 0, column: 3, index: 4, length: 1 },
                         parentScope: [Circular],
                         parentNode: [Circular],
                         queueQualifier: 0,
                         identifier: 
                          Identifier {
                            position: { line: 0, column: 3, index: 4, length: 1 },
                            parentScope: [Circular],
                            parentNode: [Circular],
                            queueQualifier: 0,
                            identifier: ScopeItem { rootId: 'a', references: [], type: null },
                            original: 'a' },
                         type: null },
                      value: [Circular],
                      ref: [Circular] } } ] },
              parentScope: 
               Scope {
                 ids: 
                  Map {
                    'Int' => [ ScopeTypeItem {
                      rootId: 'Int',
                      references: [],
                      type: null,
                      isInterface: false,
                      castsables: [],
                      superclass: 
                       ScopeTypeItem {
                         rootId: 'Object',
                         references: [],
                         type: null,
                         isInterface: false,
                         castsables: [],
                         superclass: undefined,
                         subscope: null },
                      subscope: 
                       Scope {
                         ids: Map {},
                         parentScope: 
                          Scope {
                            ids: Map { 'Int' => [ [Circular] ] },
                            parentScope: 
                             Scope {
                               ids: 
                                Map {
                                  'Int' => [ [Circular] ],
                                  'Int8' => [ ScopeTypeItem {
                                    rootId: 'Int8',
                                    references: [],
                                    type: null,
                                    isInterface: false,
                                    castsables: [],
                                    superclass: 
                                     ScopeTypeItem {
                                       rootId: 'Object',
                                       references: [],
                                       type: null,
                                       isInterface: false,
                                       castsables: [],
                                       superclass: undefined,
                                       subscope: null },
                                    subscope: 
                                     Scope {
                                       ids: Map {},
                                       parentScope: 
                                        Scope {
                                          ids: Map { 'Int8' => [ [Circular] ] },
                                          parentScope: [Circular] } } } ] },
                               parentScope: null } } } } ],
                    'Int8' => [ ScopeTypeItem {
                      rootId: 'Int8',
                      references: [],
                      type: null,
                      isInterface: false,
                      castsables: [],
                      superclass: 
                       ScopeTypeItem {
                         rootId: 'Object',
                         references: [],
                         type: null,
                         isInterface: false,
                         castsables: [],
                         superclass: undefined,
                         subscope: null },
                      subscope: 
                       Scope {
                         ids: Map {},
                         parentScope: 
                          Scope {
                            ids: Map { 'Int8' => [ [Circular] ] },
                            parentScope: 
                             Scope {
                               ids: Map {},
                               parentScope: 
                                Scope {
                                  ids: 
                                   Map {
                                     'Int' => [ ScopeTypeItem {
                                       rootId: 'Int',
                                       references: [],
                                       type: null,
                                       isInterface: false,
                                       castsables: [],
                                       superclass: 
                                        ScopeTypeItem {
                                          rootId: 'Object',
                                          references: [],
                                          type: null,
                                          isInterface: false,
                                          castsables: [],
                                          superclass: undefined,
                                          subscope: null },
                                       subscope: [Circular] } ] },
                                  parentScope: 
                                   Scope {
                                     ids: 
                                      Map {
                                        'Int' => [ ScopeTypeItem {
                                          rootId: 'Int',
                                          references: [],
                                          type: null,
                                          isInterface: false,
                                          castsables: [],
                                          superclass: 
                                           ScopeTypeItem {
                                             rootId: 'Object',
                                             references: [],
                                             type: null,
                                             isInterface: false,
                                             castsables: [],
                                             superclass: undefined,
                                             subscope: null },
                                          subscope: [Circular] } ],
                                        'Int8' => [ [Circular] ] },
                                     parentScope: null } } } } } } ] },
                 parentScope: null } },
           rootScope: true,
           lazyHooks: [] },
        parentNode: 
         AssignmentStatement {
           position: { line: 0, column: 5, index: 8, length: 1 },
           parentScope: 
            CodeBlock {
              position: { line: 1, column: -1, index: 9, length: 1 },
              parentScope: [Circular],
              parentNode: 
               [ [Circular],
                 parentScope: null,
                 parentNode: CodeBlock {
                   position: null,
                   parentScope: null,
                   parentNode: null,
                   queueQualifier: null,
                   statements: [Circular],
                   scope: 
                    Scope {
                      ids: 
                       Map {
                         'Int' => [ ScopeTypeItem {
                           rootId: 'Int',
                           references: [],
                           type: null,
                           isInterface: false,
                           castsables: [],
                           superclass: 
                            ScopeTypeItem {
                              rootId: 'Object',
                              references: [],
                              type: null,
                              isInterface: false,
                              castsables: [],
                              superclass: undefined,
                              subscope: null },
                           subscope: 
                            Scope {
                              ids: Map {},
                              parentScope: 
                               Scope {
                                 ids: Map { 'Int' => [ [Circular] ] },
                                 parentScope: 
                                  Scope {
                                    ids: 
                                     Map {
                                       'Int' => [ [Circular] ],
                                       'Int8' => [ ScopeTypeItem {
                                         rootId: 'Int8',
                                         references: [],
                                         type: null,
                                         isInterface: false,
                                         castsables: [],
                                         superclass: 
                                          ScopeTypeItem {
                                            rootId: 'Object',
                                            references: [],
                                            type: null,
                                            isInterface: false,
                                            castsables: [],
                                            superclass: undefined,
                                            subscope: null },
                                         subscope: 
                                          Scope {
                                            ids: Map {},
                                            parentScope: 
                                             Scope {
                                               ids: Map { 'Int8' => [ [Circular] ] },
                                               parentScope: [Circular] } } } ] },
                                    parentScope: null } } } } ],
                         'Int8' => [ ScopeTypeItem {
                           rootId: 'Int8',
                           references: [],
                           type: null,
                           isInterface: false,
                           castsables: [],
                           superclass: 
                            ScopeTypeItem {
                              rootId: 'Object',
                              references: [],
                              type: null,
                              isInterface: false,
                              castsables: [],
                              superclass: undefined,
                              subscope: null },
                           subscope: 
                            Scope {
                              ids: Map {},
                              parentScope: 
                               Scope {
                                 ids: Map { 'Int8' => [ [Circular] ] },
                                 parentScope: 
                                  Scope {
                                    ids: Map {},
                                    parentScope: 
                                     Scope {
                                       ids: 
                                        Map {
                                          'Int' => [ ScopeTypeItem {
                                            rootId: 'Int',
                                            references: [],
                                            type: null,
                                            isInterface: false,
                                            castsables: [],
                                            superclass: 
                                             ScopeTypeItem {
                                               rootId: 'Object',
                                               references: [],
                                               type: null,
                                               isInterface: false,
                                               castsables: [],
                                               superclass: undefined,
                                               subscope: null },
                                            subscope: [Circular] } ] },
                                       parentScope: 
                                        Scope {
                                          ids: 
                                           Map {
                                             'Int' => [ ScopeTypeItem {
                                               rootId: 'Int',
                                               references: [],
                                               type: null,
                                               isInterface: false,
                                               castsables: [],
                                               superclass: 
                                                ScopeTypeItem {
                                                  rootId: 'Object',
                                                  references: [],
                                                  type: null,
                                                  isInterface: false,
                                                  castsables: [],
                                                  superclass: undefined,
                                                  subscope: null },
                                               subscope: [Circular] } ],
                                             'Int8' => [ [Circular] ] },
                                          parentScope: null } } } } } } ] },
                      parentScope: null },
                   rootScope: false,
                   lazyHooks: [] } ],
              queueQualifier: 0,
              statements: [ [Circular], parentScope: [Circular], parentNode: [Circular] ],
              scope: 
               Scope {
                 ids: 
                  Map {
                    'a' => [ ScopeAliasItem {
                      rootId: 'a',
                      references: [],
                      type: null,
                      candidates: [],
                      escapesScope: false,
                      source: [Circular] } ] },
                 parentScope: 
                  Scope {
                    ids: 
                     Map {
                       'Int' => [ ScopeTypeItem {
                         rootId: 'Int',
                         references: [],
                         type: null,
                         isInterface: false,
                         castsables: [],
                         superclass: 
                          ScopeTypeItem {
                            rootId: 'Object',
                            references: [],
                            type: null,
                            isInterface: false,
                            castsables: [],
                            superclass: undefined,
                            subscope: null },
                         subscope: 
                          Scope {
                            ids: Map {},
                            parentScope: 
                             Scope {
                               ids: Map { 'Int' => [ [Circular] ] },
                               parentScope: 
                                Scope {
                                  ids: 
                                   Map {
                                     'Int' => [ [Circular] ],
                                     'Int8' => [ ScopeTypeItem {
                                       rootId: 'Int8',
                                       references: [],
                                       type: null,
                                       isInterface: false,
                                       castsables: [],
                                       superclass: 
                                        ScopeTypeItem {
                                          rootId: 'Object',
                                          references: [],
                                          type: null,
                                          isInterface: false,
                                          castsables: [],
                                          superclass: undefined,
                                          subscope: null },
                                       subscope: 
                                        Scope {
                                          ids: Map {},
                                          parentScope: 
                                           Scope {
                                             ids: Map { 'Int8' => [ [Circular] ] },
                                             parentScope: [Circular] } } } ] },
                                  parentScope: null } } } } ],
                       'Int8' => [ ScopeTypeItem {
                         rootId: 'Int8',
                         references: [],
                         type: null,
                         isInterface: false,
                         castsables: [],
                         superclass: 
                          ScopeTypeItem {
                            rootId: 'Object',
                            references: [],
                            type: null,
                            isInterface: false,
                            castsables: [],
                            superclass: undefined,
                            subscope: null },
                         subscope: 
                          Scope {
                            ids: Map {},
                            parentScope: 
                             Scope {
                               ids: Map { 'Int8' => [ [Circular] ] },
                               parentScope: 
                                Scope {
                                  ids: Map {},
                                  parentScope: 
                                   Scope {
                                     ids: 
                                      Map {
                                        'Int' => [ ScopeTypeItem {
                                          rootId: 'Int',
                                          references: [],
                                          type: null,
                                          isInterface: false,
                                          castsables: [],
                                          superclass: 
                                           ScopeTypeItem {
                                             rootId: 'Object',
                                             references: [],
                                             type: null,
                                             isInterface: false,
                                             castsables: [],
                                             superclass: undefined,
                                             subscope: null },
                                          subscope: [Circular] } ] },
                                     parentScope: 
                                      Scope {
                                        ids: 
                                         Map {
                                           'Int' => [ ScopeTypeItem {
                                             rootId: 'Int',
                                             references: [],
                                             type: null,
                                             isInterface: false,
                                             castsables: [],
                                             superclass: 
                                              ScopeTypeItem {
                                                rootId: 'Object',
                                                references: [],
                                                type: null,
                                                isInterface: false,
                                                castsables: [],
                                                superclass: undefined,
                                                subscope: null },
                                             subscope: [Circular] } ],
                                           'Int8' => [ [Circular] ] },
                                        parentScope: null } } } } } } ] },
                    parentScope: null } },
              rootScope: true,
              lazyHooks: [] },
           parentNode: 
            [ [Circular],
              parentScope: CodeBlock {
                position: { line: 1, column: -1, index: 9, length: 1 },
                parentScope: [Circular],
                parentNode: 
                 [ [Circular],
                   parentScope: null,
                   parentNode: CodeBlock {
                     position: null,
                     parentScope: null,
                     parentNode: null,
                     queueQualifier: null,
                     statements: [Circular],
                     scope: 
                      Scope {
                        ids: 
                         Map {
                           'Int' => [ ScopeTypeItem {
                             rootId: 'Int',
                             references: [],
                             type: null,
                             isInterface: false,
                             castsables: [],
                             superclass: 
                              ScopeTypeItem {
                                rootId: 'Object',
                                references: [],
                                type: null,
                                isInterface: false,
                                castsables: [],
                                superclass: undefined,
                                subscope: null },
                             subscope: 
                              Scope {
                                ids: Map {},
                                parentScope: 
                                 Scope {
                                   ids: Map { 'Int' => [ [Circular] ] },
                                   parentScope: 
                                    Scope {
                                      ids: 
                                       Map {
                                         'Int' => [ [Circular] ],
                                         'Int8' => [ ScopeTypeItem {
                                           rootId: 'Int8',
                                           references: [],
                                           type: null,
                                           isInterface: false,
                                           castsables: [],
                                           superclass: 
                                            ScopeTypeItem {
                                              rootId: 'Object',
                                              references: [],
                                              type: null,
                                              isInterface: false,
                                              castsables: [],
                                              superclass: undefined,
                                              subscope: null },
                                           subscope: 
                                            Scope {
                                              ids: Map {},
                                              parentScope: 
                                               Scope {
                                                 ids: Map { 'Int8' => [ [Circular] ] },
                                                 parentScope: [Circular] } } } ] },
                                      parentScope: null } } } } ],
                           'Int8' => [ ScopeTypeItem {
                             rootId: 'Int8',
                             references: [],
                             type: null,
                             isInterface: false,
                             castsables: [],
                             superclass: 
                              ScopeTypeItem {
                                rootId: 'Object',
                                references: [],
                                type: null,
                                isInterface: false,
                                castsables: [],
                                superclass: undefined,
                                subscope: null },
                             subscope: 
                              Scope {
                                ids: Map {},
                                parentScope: 
                                 Scope {
                                   ids: Map { 'Int8' => [ [Circular] ] },
                                   parentScope: 
                                    Scope {
                                      ids: Map {},
                                      parentScope: 
                                       Scope {
                                         ids: 
                                          Map {
                                            'Int' => [ ScopeTypeItem {
                                              rootId: 'Int',
                                              references: [],
                                              type: null,
                                              isInterface: false,
                                              castsables: [],
                                              superclass: 
                                               ScopeTypeItem {
                                                 rootId: 'Object',
                                                 references: [],
                                                 type: null,
                                                 isInterface: false,
                                                 castsables: [],
                                                 superclass: undefined,
                                                 subscope: null },
                                              subscope: [Circular] } ] },
                                         parentScope: 
                                          Scope {
                                            ids: 
                                             Map {
                                               'Int' => [ ScopeTypeItem {
                                                 rootId: 'Int',
                                                 references: [],
                                                 type: null,
                                                 isInterface: false,
                                                 castsables: [],
                                                 superclass: 
                                                  ScopeTypeItem {
                                                    rootId: 'Object',
                                                    references: [],
                                                    type: null,
                                                    isInterface: false,
                                                    castsables: [],
                                                    superclass: undefined,
                                                    subscope: null },
                                                 subscope: [Circular] } ],
                                               'Int8' => [ [Circular] ] },
                                            parentScope: null } } } } } } ] },
                        parentScope: null },
                     rootScope: false,
                     lazyHooks: [] } ],
                queueQualifier: 0,
                statements: [Circular],
                scope: 
                 Scope {
                   ids: 
                    Map {
                      'a' => [ ScopeAliasItem {
                        rootId: 'a',
                        references: [],
                        type: null,
                        candidates: [],
                        escapesScope: false,
                        source: [Circular] } ] },
                   parentScope: 
                    Scope {
                      ids: 
                       Map {
                         'Int' => [ ScopeTypeItem {
                           rootId: 'Int',
                           references: [],
                           type: null,
                           isInterface: false,
                           castsables: [],
                           superclass: 
                            ScopeTypeItem {
                              rootId: 'Object',
                              references: [],
                              type: null,
                              isInterface: false,
                              castsables: [],
                              superclass: undefined,
                              subscope: null },
                           subscope: 
                            Scope {
                              ids: Map {},
                              parentScope: 
                               Scope {
                                 ids: Map { 'Int' => [ [Circular] ] },
                                 parentScope: 
                                  Scope {
                                    ids: 
                                     Map {
                                       'Int' => [ [Circular] ],
                                       'Int8' => [ ScopeTypeItem {
                                         rootId: 'Int8',
                                         references: [],
                                         type: null,
                                         isInterface: false,
                                         castsables: [],
                                         superclass: 
                                          ScopeTypeItem {
                                            rootId: 'Object',
                                            references: [],
                                            type: null,
                                            isInterface: false,
                                            castsables: [],
                                            superclass: undefined,
                                            subscope: null },
                                         subscope: 
                                          Scope {
                                            ids: Map {},
                                            parentScope: 
                                             Scope {
                                               ids: Map { 'Int8' => [ [Circular] ] },
                                               parentScope: [Circular] } } } ] },
                                    parentScope: null } } } } ],
                         'Int8' => [ ScopeTypeItem {
                           rootId: 'Int8',
                           references: [],
                           type: null,
                           isInterface: false,
                           castsables: [],
                           superclass: 
                            ScopeTypeItem {
                              rootId: 'Object',
                              references: [],
                              type: null,
                              isInterface: false,
                              castsables: [],
                              superclass: undefined,
                              subscope: null },
                           subscope: 
                            Scope {
                              ids: Map {},
                              parentScope: 
                               Scope {
                                 ids: Map { 'Int8' => [ [Circular] ] },
                                 parentScope: 
                                  Scope {
                                    ids: Map {},
                                    parentScope: 
                                     Scope {
                                       ids: 
                                        Map {
                                          'Int' => [ ScopeTypeItem {
                                            rootId: 'Int',
                                            references: [],
                                            type: null,
                                            isInterface: false,
                                            castsables: [],
                                            superclass: 
                                             ScopeTypeItem {
                                               rootId: 'Object',
                                               references: [],
                                               type: null,
                                               isInterface: false,
                                               castsables: [],
                                               superclass: undefined,
                                               subscope: null },
                                            subscope: [Circular] } ] },
                                       parentScope: 
                                        Scope {
                                          ids: 
                                           Map {
                                             'Int' => [ ScopeTypeItem {
                                               rootId: 'Int',
                                               references: [],
                                               type: null,
                                               isInterface: false,
                                               castsables: [],
                                               superclass: 
                                                ScopeTypeItem {
                                                  rootId: 'Object',
                                                  references: [],
                                                  type: null,
                                                  isInterface: false,
                                                  castsables: [],
                                                  superclass: undefined,
                                                  subscope: null },
                                               subscope: [Circular] } ],
                                             'Int8' => [ [Circular] ] },
                                          parentScope: null } } } } } } ] },
                      parentScope: null } },
                rootScope: true,
                lazyHooks: [] },
              parentNode: CodeBlock {
                position: { line: 1, column: -1, index: 9, length: 1 },
                parentScope: [Circular],
                parentNode: 
                 [ [Circular],
                   parentScope: null,
                   parentNode: CodeBlock {
                     position: null,
                     parentScope: null,
                     parentNode: null,
                     queueQualifier: null,
                     statements: [Circular],
                     scope: 
                      Scope {
                        ids: 
                         Map {
                           'Int' => [ ScopeTypeItem {
                             rootId: 'Int',
                             references: [],
                             type: null,
                             isInterface: false,
                             castsables: [],
                             superclass: 
                              ScopeTypeItem {
                                rootId: 'Object',
                                references: [],
                                type: null,
                                isInterface: false,
                                castsables: [],
                                superclass: undefined,
                                subscope: null },
                             subscope: 
                              Scope {
                                ids: Map {},
                                parentScope: 
                                 Scope {
                                   ids: Map { 'Int' => [ [Circular] ] },
                                   parentScope: 
                                    Scope {
                                      ids: 
                                       Map {
                                         'Int' => [ [Circular] ],
                                         'Int8' => [ ScopeTypeItem {
                                           rootId: 'Int8',
                                           references: [],
                                           type: null,
                                           isInterface: false,
                                           castsables: [],
                                           superclass: 
                                            ScopeTypeItem {
                                              rootId: 'Object',
                                              references: [],
                                              type: null,
                                              isInterface: false,
                                              castsables: [],
                                              superclass: undefined,
                                              subscope: null },
                                           subscope: 
                                            Scope {
                                              ids: Map {},
                                              parentScope: 
                                               Scope {
                                                 ids: Map { 'Int8' => [ [Circular] ] },
                                                 parentScope: [Circular] } } } ] },
                                      parentScope: null } } } } ],
                           'Int8' => [ ScopeTypeItem {
                             rootId: 'Int8',
                             references: [],
                             type: null,
                             isInterface: false,
                             castsables: [],
                             superclass: 
                              ScopeTypeItem {
                                rootId: 'Object',
                                references: [],
                                type: null,
                                isInterface: false,
                                castsables: [],
                                superclass: undefined,
                                subscope: null },
                             subscope: 
                              Scope {
                                ids: Map {},
                                parentScope: 
                                 Scope {
                                   ids: Map { 'Int8' => [ [Circular] ] },
                                   parentScope: 
                                    Scope {
                                      ids: Map {},
                                      parentScope: 
                                       Scope {
                                         ids: 
                                          Map {
                                            'Int' => [ ScopeTypeItem {
                                              rootId: 'Int',
                                              references: [],
                                              type: null,
                                              isInterface: false,
                                              castsables: [],
                                              superclass: 
                                               ScopeTypeItem {
                                                 rootId: 'Object',
                                                 references: [],
                                                 type: null,
                                                 isInterface: false,
                                                 castsables: [],
                                                 superclass: undefined,
                                                 subscope: null },
                                              subscope: [Circular] } ] },
                                         parentScope: 
                                          Scope {
                                            ids: 
                                             Map {
                                               'Int' => [ ScopeTypeItem {
                                                 rootId: 'Int',
                                                 references: [],
                                                 type: null,
                                                 isInterface: false,
                                                 castsables: [],
                                                 superclass: 
                                                  ScopeTypeItem {
                                                    rootId: 'Object',
                                                    references: [],
                                                    type: null,
                                                    isInterface: false,
                                                    castsables: [],
                                                    superclass: undefined,
                                                    subscope: null },
                                                 subscope: [Circular] } ],
                                               'Int8' => [ [Circular] ] },
                                            parentScope: null } } } } } } ] },
                        parentScope: null },
                     rootScope: false,
                     lazyHooks: [] } ],
                queueQualifier: 0,
                statements: [Circular],
                scope: 
                 Scope {
                   ids: 
                    Map {
                      'a' => [ ScopeAliasItem {
                        rootId: 'a',
                        references: [],
                        type: null,
                        candidates: [],
                        escapesScope: false,
                        source: [Circular] } ] },
                   parentScope: 
                    Scope {
                      ids: 
                       Map {
                         'Int' => [ ScopeTypeItem {
                           rootId: 'Int',
                           references: [],
                           type: null,
                           isInterface: false,
                           castsables: [],
                           superclass: 
                            ScopeTypeItem {
                              rootId: 'Object',
                              references: [],
                              type: null,
                              isInterface: false,
                              castsables: [],
                              superclass: undefined,
                              subscope: null },
                           subscope: 
                            Scope {
                              ids: Map {},
                              parentScope: 
                               Scope {
                                 ids: Map { 'Int' => [ [Circular] ] },
                                 parentScope: 
                                  Scope {
                                    ids: 
                                     Map {
                                       'Int' => [ [Circular] ],
                                       'Int8' => [ ScopeTypeItem {
                                         rootId: 'Int8',
                                         references: [],
                                         type: null,
                                         isInterface: false,
                                         castsables: [],
                                         superclass: 
                                          ScopeTypeItem {
                                            rootId: 'Object',
                                            references: [],
                                            type: null,
                                            isInterface: false,
                                            castsables: [],
                                            superclass: undefined,
                                            subscope: null },
                                         subscope: 
                                          Scope {
                                            ids: Map {},
                                            parentScope: 
                                             Scope {
                                               ids: Map { 'Int8' => [ [Circular] ] },
                                               parentScope: [Circular] } } } ] },
                                    parentScope: null } } } } ],
                         'Int8' => [ ScopeTypeItem {
                           rootId: 'Int8',
                           references: [],
                           type: null,
                           isInterface: false,
                           castsables: [],
                           superclass: 
                            ScopeTypeItem {
                              rootId: 'Object',
                              references: [],
                              type: null,
                              isInterface: false,
                              castsables: [],
                              superclass: undefined,
                              subscope: null },
                           subscope: 
                            Scope {
                              ids: Map {},
                              parentScope: 
                               Scope {
                                 ids: Map { 'Int8' => [ [Circular] ] },
                                 parentScope: 
                                  Scope {
                                    ids: Map {},
                                    parentScope: 
                                     Scope {
                                       ids: 
                                        Map {
                                          'Int' => [ ScopeTypeItem {
                                            rootId: 'Int',
                                            references: [],
                                            type: null,
                                            isInterface: false,
                                            castsables: [],
                                            superclass: 
                                             ScopeTypeItem {
                                               rootId: 'Object',
                                               references: [],
                                               type: null,
                                               isInterface: false,
                                               castsables: [],
                                               superclass: undefined,
                                               subscope: null },
                                            subscope: [Circular] } ] },
                                       parentScope: 
                                        Scope {
                                          ids: 
                                           Map {
                                             'Int' => [ ScopeTypeItem {
                                               rootId: 'Int',
                                               references: [],
                                               type: null,
                                               isInterface: false,
                                               castsables: [],
                                               superclass: 
                                                ScopeTypeItem {
                                                  rootId: 'Object',
                                                  references: [],
                                                  type: null,
                                                  isInterface: false,
                                                  castsables: [],
                                                  superclass: undefined,
                                                  subscope: null },
                                               subscope: [Circular] } ],
                                             'Int8' => [ [Circular] ] },
                                          parentScope: null } } } } } } ] },
                      parentScope: null } },
                rootScope: true,
                lazyHooks: [] } ],
           queueQualifier: 0,
           access: [],
           scopeRef: null,
           type: 1,
           identifier: 
            TypedIdentifier {
              position: { line: 0, column: 3, index: 4, length: 1 },
              parentScope: 
               CodeBlock {
                 position: { line: 1, column: -1, index: 9, length: 1 },
                 parentScope: [Circular],
                 parentNode: 
                  [ [Circular],
                    parentScope: null,
                    parentNode: CodeBlock {
                      position: null,
                      parentScope: null,
                      parentNode: null,
                      queueQualifier: null,
                      statements: [Circular],
                      scope: 
                       Scope {
                         ids: 
                          Map {
                            'Int' => [ ScopeTypeItem {
                              rootId: 'Int',
                              references: [],
                              type: null,
                              isInterface: false,
                              castsables: [],
                              superclass: 
                               ScopeTypeItem {
                                 rootId: 'Object',
                                 references: [],
                                 type: null,
                                 isInterface: false,
                                 castsables: [],
                                 superclass: undefined,
                                 subscope: null },
                              subscope: 
                               Scope {
                                 ids: Map {},
                                 parentScope: 
                                  Scope {
                                    ids: Map { 'Int' => [ [Circular] ] },
                                    parentScope: 
                                     Scope {
                                       ids: 
                                        Map {
                                          'Int' => [ [Circular] ],
                                          'Int8' => [ ScopeTypeItem {
                                            rootId: 'Int8',
                                            references: [],
                                            type: null,
                                            isInterface: false,
                                            castsables: [],
                                            superclass: 
                                             ScopeTypeItem {
                                               rootId: 'Object',
                                               references: [],
                                               type: null,
                                               isInterface: false,
                                               castsables: [],
                                               superclass: undefined,
                                               subscope: null },
                                            subscope: 
                                             Scope {
                                               ids: Map {},
                                               parentScope: 
                                                Scope {
                                                  ids: Map { 'Int8' => [ [Circular] ] },
                                                  parentScope: [Circular] } } } ] },
                                       parentScope: null } } } } ],
                            'Int8' => [ ScopeTypeItem {
                              rootId: 'Int8',
                              references: [],
                              type: null,
                              isInterface: false,
                              castsables: [],
                              superclass: 
                               ScopeTypeItem {
                                 rootId: 'Object',
                                 references: [],
                                 type: null,
                                 isInterface: false,
                                 castsables: [],
                                 superclass: undefined,
                                 subscope: null },
                              subscope: 
                               Scope {
                                 ids: Map {},
                                 parentScope: 
                                  Scope {
                                    ids: Map { 'Int8' => [ [Circular] ] },
                                    parentScope: 
                                     Scope {
                                       ids: Map {},
                                       parentScope: 
                                        Scope {
                                          ids: 
                                           Map {
                                             'Int' => [ ScopeTypeItem {
                                               rootId: 'Int',
                                               references: [],
                                               type: null,
                                               isInterface: false,
                                               castsables: [],
                                               superclass: 
                                                ScopeTypeItem {
                                                  rootId: 'Object',
                                                  references: [],
                                                  type: null,
                                                  isInterface: false,
                                                  castsables: [],
                                                  superclass: undefined,
                                                  subscope: null },
                                               subscope: [Circular] } ] },
                                          parentScope: 
                                           Scope {
                                             ids: 
                                              Map {
                                                'Int' => [ ScopeTypeItem {
                                                  rootId: 'Int',
                                                  references: [],
                                                  type: null,
                                                  isInterface: false,
                                                  castsables: [],
                                                  superclass: 
                                                   ScopeTypeItem {
                                                     rootId: 'Object',
                                                     references: [],
                                                     type: null,
                                                     isInterface: false,
                                                     castsables: [],
                                                     superclass: undefined,
                                                     subscope: null },
                                                  subscope: [Circular] } ],
                                                'Int8' => [ [Circular] ] },
                                             parentScope: null } } } } } } ] },
                         parentScope: null },
                      rootScope: false,
                      lazyHooks: [] } ],
                 queueQualifier: 0,
                 statements: [ [Circular], parentScope: [Circular], parentNode: [Circular] ],
                 scope: 
                  Scope {
                    ids: 
                     Map {
                       'a' => [ ScopeAliasItem {
                         rootId: 'a',
                         references: [],
                         type: null,
                         candidates: [],
                         escapesScope: false,
                         source: [Circular] } ] },
                    parentScope: 
                     Scope {
                       ids: 
                        Map {
                          'Int' => [ ScopeTypeItem {
                            rootId: 'Int',
                            references: [],
                            type: null,
                            isInterface: false,
                            castsables: [],
                            superclass: 
                             ScopeTypeItem {
                               rootId: 'Object',
                               references: [],
                               type: null,
                               isInterface: false,
                               castsables: [],
                               superclass: undefined,
                               subscope: null },
                            subscope: 
                             Scope {
                               ids: Map {},
                               parentScope: 
                                Scope {
                                  ids: Map { 'Int' => [ [Circular] ] },
                                  parentScope: 
                                   Scope {
                                     ids: 
                                      Map {
                                        'Int' => [ [Circular] ],
                                        'Int8' => [ ScopeTypeItem {
                                          rootId: 'Int8',
                                          references: [],
                                          type: null,
                                          isInterface: false,
                                          castsables: [],
                                          superclass: 
                                           ScopeTypeItem {
                                             rootId: 'Object',
                                             references: [],
                                             type: null,
                                             isInterface: false,
                                             castsables: [],
                                             superclass: undefined,
                                             subscope: null },
                                          subscope: 
                                           Scope {
                                             ids: Map {},
                                             parentScope: 
                                              Scope {
                                                ids: Map { 'Int8' => [ [Circular] ] },
                                                parentScope: [Circular] } } } ] },
                                     parentScope: null } } } } ],
                          'Int8' => [ ScopeTypeItem {
                            rootId: 'Int8',
                            references: [],
                            type: null,
                            isInterface: false,
                            castsables: [],
                            superclass: 
                             ScopeTypeItem {
                               rootId: 'Object',
                               references: [],
                               type: null,
                               isInterface: false,
                               castsables: [],
                               superclass: undefined,
                               subscope: null },
                            subscope: 
                             Scope {
                               ids: Map {},
                               parentScope: 
                                Scope {
                                  ids: Map { 'Int8' => [ [Circular] ] },
                                  parentScope: 
                                   Scope {
                                     ids: Map {},
                                     parentScope: 
                                      Scope {
                                        ids: 
                                         Map {
                                           'Int' => [ ScopeTypeItem {
                                             rootId: 'Int',
                                             references: [],
                                             type: null,
                                             isInterface: false,
                                             castsables: [],
                                             superclass: 
                                              ScopeTypeItem {
                                                rootId: 'Object',
                                                references: [],
                                                type: null,
                                                isInterface: false,
                                                castsables: [],
                                                superclass: undefined,
                                                subscope: null },
                                             subscope: [Circular] } ] },
                                        parentScope: 
                                         Scope {
                                           ids: 
                                            Map {
                                              'Int' => [ ScopeTypeItem {
                                                rootId: 'Int',
                                                references: [],
                                                type: null,
                                                isInterface: false,
                                                castsables: [],
                                                superclass: 
                                                 ScopeTypeItem {
                                                   rootId: 'Object',
                                                   references: [],
                                                   type: null,
                                                   isInterface: false,
                                                   castsables: [],
                                                   superclass: undefined,
                                                   subscope: null },
                                                subscope: [Circular] } ],
                                              'Int8' => [ [Circular] ] },
                                           parentScope: null } } } } } } ] },
                       parentScope: null } },
                 rootScope: true,
                 lazyHooks: [] },
              parentNode: [Circular],
              queueQualifier: 0,
              identifier: 
               Identifier {
                 position: { line: 0, column: 3, index: 4, length: 1 },
                 parentScope: 
                  CodeBlock {
                    position: { line: 1, column: -1, index: 9, length: 1 },
                    parentScope: [Circular],
                    parentNode: 
                     [ [Circular],
                       parentScope: null,
                       parentNode: CodeBlock {
                         position: null,
                         parentScope: null,
                         parentNode: null,
                         queueQualifier: null,
                         statements: [Circular],
                         scope: 
                          Scope {
                            ids: 
                             Map {
                               'Int' => [ ScopeTypeItem {
                                 rootId: 'Int',
                                 references: [],
                                 type: null,
                                 isInterface: false,
                                 castsables: [],
                                 superclass: 
                                  ScopeTypeItem {
                                    rootId: 'Object',
                                    references: [],
                                    type: null,
                                    isInterface: false,
                                    castsables: [],
                                    superclass: undefined,
                                    subscope: null },
                                 subscope: 
                                  Scope {
                                    ids: Map {},
                                    parentScope: 
                                     Scope {
                                       ids: Map { 'Int' => [ [Circular] ] },
                                       parentScope: 
                                        Scope {
                                          ids: 
                                           Map {
                                             'Int' => [ [Circular] ],
                                             'Int8' => [ ScopeTypeItem {
                                               rootId: 'Int8',
                                               references: [],
                                               type: null,
                                               isInterface: false,
                                               castsables: [],
                                               superclass: 
                                                ScopeTypeItem {
                                                  rootId: 'Object',
                                                  references: [],
                                                  type: null,
                                                  isInterface: false,
                                                  castsables: [],
                                                  superclass: undefined,
                                                  subscope: null },
                                               subscope: 
                                                Scope {
                                                  ids: Map {},
                                                  parentScope: 
                                                   Scope {
                                                     ids: Map { 'Int8' => [ [Circular] ] },
                                                     parentScope: [Circular] } } } ] },
                                          parentScope: null } } } } ],
                               'Int8' => [ ScopeTypeItem {
                                 rootId: 'Int8',
                                 references: [],
                                 type: null,
                                 isInterface: false,
                                 castsables: [],
                                 superclass: 
                                  ScopeTypeItem {
                                    rootId: 'Object',
                                    references: [],
                                    type: null,
                                    isInterface: false,
                                    castsables: [],
                                    superclass: undefined,
                                    subscope: null },
                                 subscope: 
                                  Scope {
                                    ids: Map {},
                                    parentScope: 
                                     Scope {
                                       ids: Map { 'Int8' => [ [Circular] ] },
                                       parentScope: 
                                        Scope {
                                          ids: Map {},
                                          parentScope: 
                                           Scope {
                                             ids: 
                                              Map {
                                                'Int' => [ ScopeTypeItem {
                                                  rootId: 'Int',
                                                  references: [],
                                                  type: null,
                                                  isInterface: false,
                                                  castsables: [],
                                                  superclass: 
                                                   ScopeTypeItem {
                                                     rootId: 'Object',
                                                     references: [],
                                                     type: null,
                                                     isInterface: false,
                                                     castsables: [],
                                                     superclass: undefined,
                                                     subscope: null },
                                                  subscope: [Circular] } ] },
                                             parentScope: 
                                              Scope {
                                                ids: 
                                                 Map {
                                                   'Int' => [ ScopeTypeItem {
                                                     rootId: 'Int',
                                                     references: [],
                                                     type: null,
                                                     isInterface: false,
                                                     castsables: [],
                                                     superclass: 
                                                      ScopeTypeItem {
                                                        rootId: 'Object',
                                                        references: [],
                                                        type: null,
                                                        isInterface: false,
                                                        castsables: [],
                                                        superclass: undefined,
                                                        subscope: null },
                                                     subscope: [Circular] } ],
                                                   'Int8' => [ [Circular] ] },
                                                parentScope: null } } } } } } ] },
                            parentScope: null },
                         rootScope: false,
                         lazyHooks: [] } ],
                    queueQualifier: 0,
                    statements: [ [Circular], parentScope: [Circular], parentNode: [Circular] ],
                    scope: 
                     Scope {
                       ids: 
                        Map {
                          'a' => [ ScopeAliasItem {
                            rootId: 'a',
                            references: [],
                            type: null,
                            candidates: [],
                            escapesScope: false,
                            source: [Circular] } ] },
                       parentScope: 
                        Scope {
                          ids: 
                           Map {
                             'Int' => [ ScopeTypeItem {
                               rootId: 'Int',
                               references: [],
                               type: null,
                               isInterface: false,
                               castsables: [],
                               superclass: 
                                ScopeTypeItem {
                                  rootId: 'Object',
                                  references: [],
                                  type: null,
                                  isInterface: false,
                                  castsables: [],
                                  superclass: undefined,
                                  subscope: null },
                               subscope: 
                                Scope {
                                  ids: Map {},
                                  parentScope: 
                                   Scope {
                                     ids: Map { 'Int' => [ [Circular] ] },
                                     parentScope: 
                                      Scope {
                                        ids: 
                                         Map {
                                           'Int' => [ [Circular] ],
                                           'Int8' => [ ScopeTypeItem {
                                             rootId: 'Int8',
                                             references: [],
                                             type: null,
                                             isInterface: false,
                                             castsables: [],
                                             superclass: 
                                              ScopeTypeItem {
                                                rootId: 'Object',
                                                references: [],
                                                type: null,
                                                isInterface: false,
                                                castsables: [],
                                                superclass: undefined,
                                                subscope: null },
                                             subscope: 
                                              Scope {
                                                ids: Map {},
                                                parentScope: 
                                                 Scope {
                                                   ids: Map { 'Int8' => [ [Circular] ] },
                                                   parentScope: [Circular] } } } ] },
                                        parentScope: null } } } } ],
                             'Int8' => [ ScopeTypeItem {
                               rootId: 'Int8',
                               references: [],
                               type: null,
                               isInterface: false,
                               castsables: [],
                               superclass: 
                                ScopeTypeItem {
                                  rootId: 'Object',
                                  references: [],
                                  type: null,
                                  isInterface: false,
                                  castsables: [],
                                  superclass: undefined,
                                  subscope: null },
                               subscope: 
                                Scope {
                                  ids: Map {},
                                  parentScope: 
                                   Scope {
                                     ids: Map { 'Int8' => [ [Circular] ] },
                                     parentScope: 
                                      Scope {
                                        ids: Map {},
                                        parentScope: 
                                         Scope {
                                           ids: 
                                            Map {
                                              'Int' => [ ScopeTypeItem {
                                                rootId: 'Int',
                                                references: [],
                                                type: null,
                                                isInterface: false,
                                                castsables: [],
                                                superclass: 
                                                 ScopeTypeItem {
                                                   rootId: 'Object',
                                                   references: [],
                                                   type: null,
                                                   isInterface: false,
                                                   castsables: [],
                                                   superclass: undefined,
                                                   subscope: null },
                                                subscope: [Circular] } ] },
                                           parentScope: 
                                            Scope {
                                              ids: 
                                               Map {
                                                 'Int' => [ ScopeTypeItem {
                                                   rootId: 'Int',
                                                   references: [],
                                                   type: null,
                                                   isInterface: false,
                                                   castsables: [],
                                                   superclass: 
                                                    ScopeTypeItem {
                                                      rootId: 'Object',
                                                      references: [],
                                                      type: null,
                                                      isInterface: false,
                                                      castsables: [],
                                                      superclass: undefined,
                                                      subscope: null },
                                                   subscope: [Circular] } ],
                                                 'Int8' => [ [Circular] ] },
                                              parentScope: null } } } } } } ] },
                          parentScope: null } },
                    rootScope: true,
                    lazyHooks: [] },
                 parentNode: [Circular],
                 queueQualifier: 0,
                 identifier: ScopeItem { rootId: 'a', references: [], type: null },
                 original: 'a' },
              type: null },
           value: [Circular],
           ref: 
            ScopeAliasItem {
              rootId: 'a',
              references: [],
              type: null,
              candidates: [],
              escapesScope: false,
              source: [Circular] } },
        queueQualifier: 0,
        expression: [Circular] },
     queueQualifier: 0,
     literal: '1',
     type: 0,
     typeCandidates: [] },
  ref: undefined }
